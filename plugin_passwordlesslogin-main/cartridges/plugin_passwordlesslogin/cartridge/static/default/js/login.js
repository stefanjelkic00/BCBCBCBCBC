/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./cartridges/plugin_passwordlesslogin/cartridge/client/default/js/login.js":
/*!**********************************************************************************!*\
  !*** ./cartridges/plugin_passwordlesslogin/cartridge/client/default/js/login.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar processInclude = __webpack_require__(/*! base/util */ \"../storefront-reference-architecture/cartridges/app_storefront_base/cartridge/client/default/js/util.js\");\n\n$(document).ready(function () {\n    processInclude(__webpack_require__(/*! base/login/login */ \"../storefront-reference-architecture/cartridges/app_storefront_base/cartridge/client/default/js/login/login.js\"));\n    processInclude(__webpack_require__(/*! ./passwordlessLogin/login */ \"./cartridges/plugin_passwordlesslogin/cartridge/client/default/js/passwordlessLogin/login.js\"));\n});\n\n\n//# sourceURL=webpack://plugin_passwordlesslogin/./cartridges/plugin_passwordlesslogin/cartridge/client/default/js/login.js?");

/***/ }),

/***/ "./cartridges/plugin_passwordlesslogin/cartridge/client/default/js/passwordlessLogin/login.js":
/*!****************************************************************************************************!*\
  !*** ./cartridges/plugin_passwordlesslogin/cartridge/client/default/js/passwordlessLogin/login.js ***!
  \****************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nconst formValidation = __webpack_require__(/*! base/components/formValidation */ \"../storefront-reference-architecture/cartridges/app_storefront_base/cartridge/client/default/js/components/formValidation.js\");\nvar $tokenCodeInputs = $('input[name^=\"tokenDigit-\"]');\nvar isTokenFormSubmitting = false;\n\n/**\n * update modal contents after ajax call\n * @param {Object} data - response object\n */\nconst updateModalContents = (data) => {\n    $('.request-passwordless-login-title').text(data.receivedMsgHeading || '');\n    $('.request-passwordless-login-body').empty().append(data.receivedMsgBody || '');\n\n    if (data.buttonText && data.redirectUrl) {\n        if (data.showTokenForm) {\n            $('.passwordless-form')\n                .off('submit')\n                .removeClass('passwordless-form')\n                .addClass('passwordless-token-form')\n                .attr('action', data.redirectUrl);\n            if (data.usid) {\n                $('.passwordless-token-form').data('usid', data.usid);\n            }\n            $('.send-passwordless-email-btn')\n                .empty()\n                .html(\n                    `<button type=\"submit\" id=\"submitTokenButton\"\n                        class=\"btn btn-primary btn-block\">\n                    ${data.buttonText}</button>`);\n            $tokenCodeInputs = $('input[name^=\"tokenDigit-\"]');\n            module.exports.digitsOnly();\n            module.exports.autoAdvanceToken();\n            module.exports.moveFocusOnClear();\n            module.exports.handlePasteEvent();\n            module.exports.submitPwdlessTokenForm();\n        } else {\n            $('.send-passwordless-email-btn')\n                .empty()\n                .html(\n                    `<a href=\"${data.redirectUrl}\" class=\"btn btn-primary btn-block\">\n                ${data.buttonText}\n            </a>`);\n        }\n    } else {\n        $('.send-passwordless-email-btn').empty().html('');\n    }\n};\n\nconst getTokenValue = function () {\n    var token = '';\n    $tokenCodeInputs.each(function () {\n        token += $(this).val();\n    });\n    return token;\n};\n\nconst submitTokenForm = function () {\n    if (isTokenFormSubmitting) return;\n    var token = getTokenValue();\n    if (token.length === 8) {\n        isTokenFormSubmitting = true;\n        $('.passwordless-token-form').submit();\n    }\n};\n\nmodule.exports = {\n    submitPwdlessForm: function () {\n        $('.passwordless-form').submit(function (e) {\n            var form = $(this);\n            e.preventDefault();\n            form.spinner().start();\n            $.ajax({\n                url: form.attr('action'),\n                type: 'post',\n                dataType: 'json',\n                data: form.serialize() + '&source=form',\n                success: function (data) {\n                    form.spinner().stop();\n                    if (!data.success) {\n                        formValidation(form, data);\n                    } else {\n                        updateModalContents(data);\n                    }\n                },\n                error: function () {\n                    form.spinner().stop();\n                }\n            });\n            return false;\n        });\n    },\n\n    selectPwdlessLogin: function () {\n        $(document).on('click', '.btn-pwdless-select-login', function (e) {\n            e.preventDefault();\n            var form = $('.passwordless-form');\n            $('.alert', form).remove();\n            $.spinner().start();\n            $.ajax({\n                url: $(this).attr('href'),\n                type: 'post',\n                dataType: 'json',\n                data: {\n                    login: $(this).data('login'),\n                    csrf_token: $('input[name=\"csrf_token\"]', form).val(),\n                    source: 'select-modal'\n                },\n                success: function (data) {\n                    $.spinner().stop();\n                    if (!data.success) {\n                        formValidation(form, data);\n                    } else {\n                        updateModalContents(data);\n                    }\n                },\n                error: function () {\n                    $.spinner().stop();\n                }\n            });\n            return false;\n        });\n    },\n\n    submitPwdlessTokenForm: function () {\n        $('.passwordless-token-form').submit(function (e) {\n            e.preventDefault();\n            var form = $(this);\n            const token = getTokenValue();\n            form.spinner().start();\n            $.ajax({\n                url: form.attr('action'),\n                type: 'post',\n                dataType: 'json',\n                data: {\n                    source: 'ajax',\n                    token: token,\n                    usid: form.data('usid'),\n                    rurl: $('.pwdless-data-container').data('reentry-endpoint')\n                },\n                success: function (data) {\n                    form.spinner().stop();\n                    isTokenFormSubmitting = false;\n                    if (!data.success) {\n                        formValidation(form, data);\n                    }\n                    if (data.success && data.redirectUrl) {\n                        window.location.href = data.redirectUrl;\n                    }\n                },\n                error: function () {\n                    form.spinner().stop();\n                    isTokenFormSubmitting = false;\n                }\n            });\n            return false;\n        });\n    },\n\n    // Only allow digits to be entered\n    digitsOnly: function () {\n        $tokenCodeInputs.on('input', function () {\n            this.value = this.value.replace(/[^0-9]/g, '');\n        });\n    },\n\n    autoAdvanceToken: function () {\n        $tokenCodeInputs.on('keyup', function () {\n            if (this.value.length >= 1) {\n                var nextInput = $(this).closest('div').next().find('input');\n                if (nextInput.length) {\n                    nextInput.focus();\n                } else {\n                    submitTokenForm();\n                }\n            }\n        });\n    },\n\n    moveFocusOnClear: function () {\n        $tokenCodeInputs.on('keydown', function (e) {\n            if (e.keyCode === 8 && this.value.length === 0) {\n                var prevInput = $(this).closest('div').prev().find('input');\n                if (prevInput.length) {\n                    prevInput.focus();\n                }\n            }\n        });\n    },\n\n    handlePasteEvent: function () {\n        $tokenCodeInputs.on('paste', function (e) {\n            var pastedData = e.originalEvent.clipboardData.getData('text');\n            if (pastedData.length === $tokenCodeInputs.length) {\n                var lastFilledInput = null;\n                $tokenCodeInputs.each(function (index, input) {\n                    $(input).val(pastedData.charAt(index));\n                    if ($(input).val() !== '') {\n                        lastFilledInput = input;\n                    }\n                });\n                // Set focus on the last filled input\n                if (lastFilledInput) {\n                    $(lastFilledInput).focus();\n                }\n            }\n        });\n    }\n};\n\n\n//# sourceURL=webpack://plugin_passwordlesslogin/./cartridges/plugin_passwordlesslogin/cartridge/client/default/js/passwordlessLogin/login.js?");

/***/ }),

/***/ "../storefront-reference-architecture/cartridges/app_storefront_base/cartridge/client/default/js/components/errorNotification.js":
/*!***************************************************************************************************************************************!*\
  !*** ../storefront-reference-architecture/cartridges/app_storefront_base/cartridge/client/default/js/components/errorNotification.js ***!
  \***************************************************************************************************************************************/
/***/ ((module) => {

eval("\n\nmodule.exports = function (element, message) {\n    var errorHtml = '<div class=\"alert alert-danger alert-dismissible '\n        + 'fade show\" role=\"alert\">'\n        + '<button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">'\n        + '<span aria-hidden=\"true\">&times;</span>'\n        + '</button>' + message + '</div>';\n\n    $(element).append(errorHtml);\n};\n\n\n//# sourceURL=webpack://plugin_passwordlesslogin/../storefront-reference-architecture/cartridges/app_storefront_base/cartridge/client/default/js/components/errorNotification.js?");

/***/ }),

/***/ "../storefront-reference-architecture/cartridges/app_storefront_base/cartridge/client/default/js/components/formValidation.js":
/*!************************************************************************************************************************************!*\
  !*** ../storefront-reference-architecture/cartridges/app_storefront_base/cartridge/client/default/js/components/formValidation.js ***!
  \************************************************************************************************************************************/
/***/ ((module) => {

eval("\n\n/**\n * Remove all validation. Should be called every time before revalidating form\n * @param {element} form - Form to be cleared\n * @returns {void}\n */\nfunction clearFormErrors(form) {\n    $(form).find('.form-control.is-invalid').removeClass('is-invalid');\n}\n\nmodule.exports = function (formElement, payload) {\n    // clear form validation first\n    clearFormErrors(formElement);\n    $('.alert', formElement).remove();\n\n    if (typeof payload === 'object' && payload.fields) {\n        Object.keys(payload.fields).forEach(function (key) {\n            if (payload.fields[key]) {\n                var feedbackElement = $(formElement).find('[name=\"' + key + '\"]')\n                    .parent()\n                    .children('.invalid-feedback');\n\n                if (feedbackElement.length > 0) {\n                    if (Array.isArray(payload[key])) {\n                        feedbackElement.html(payload.fields[key].join('<br/>'));\n                    } else {\n                        feedbackElement.html(payload.fields[key]);\n                    }\n                    feedbackElement.siblings('.form-control').addClass('is-invalid');\n                }\n            }\n        });\n    }\n    if (payload && payload.error) {\n        var form = $(formElement).prop('tagName') === 'FORM'\n            ? $(formElement)\n            : $(formElement).parents('form');\n\n        form.prepend('<div class=\"alert alert-danger\" role=\"alert\">'\n            + payload.error.join('<br/>') + '</div>');\n    }\n};\n\n\n//# sourceURL=webpack://plugin_passwordlesslogin/../storefront-reference-architecture/cartridges/app_storefront_base/cartridge/client/default/js/components/formValidation.js?");

/***/ }),

/***/ "../storefront-reference-architecture/cartridges/app_storefront_base/cartridge/client/default/js/login/login.js":
/*!**********************************************************************************************************************!*\
  !*** ../storefront-reference-architecture/cartridges/app_storefront_base/cartridge/client/default/js/login/login.js ***!
  \**********************************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar formValidation = __webpack_require__(/*! ../components/formValidation */ \"../storefront-reference-architecture/cartridges/app_storefront_base/cartridge/client/default/js/components/formValidation.js\");\nvar createErrorNotification = __webpack_require__(/*! ../components/errorNotification */ \"../storefront-reference-architecture/cartridges/app_storefront_base/cartridge/client/default/js/components/errorNotification.js\");\n\nvar location = window.location;\n\nmodule.exports = {\n    login: function () {\n        $('form.login').submit(function (e) {\n            var form = $(this);\n            e.preventDefault();\n            var url = form.attr('action');\n            form.spinner().start();\n            $('form.login').trigger('login:submit', e);\n            $.ajax({\n                url: url,\n                type: 'post',\n                dataType: 'json',\n                data: form.serialize(),\n                success: function (data) {\n                    form.spinner().stop();\n                    if (!data.success) {\n                        formValidation(form, data);\n                        $('form.login').trigger('login:error', data);\n                    } else {\n                        $('form.login').trigger('login:success', data);\n                        location.href = data.redirectUrl;\n                    }\n                },\n                error: function (data) {\n                    if (data.responseJSON.redirectUrl) {\n                        window.location.href = data.responseJSON.redirectUrl;\n                    } else {\n                        $('form.login').trigger('login:error', data);\n                        form.spinner().stop();\n                    }\n                }\n            });\n            return false;\n        });\n    },\n\n    register: function () {\n        $('form.registration').submit(function (e) {\n            var form = $(this);\n            e.preventDefault();\n            var url = form.attr('action');\n            form.spinner().start();\n            $('form.registration').trigger('login:register', e);\n            $.ajax({\n                url: url,\n                type: 'post',\n                dataType: 'json',\n                data: form.serialize(),\n                success: function (data) {\n                    form.spinner().stop();\n                    if (!data.success) {\n                        $('form.registration').trigger('login:register:error', data);\n                        formValidation(form, data);\n                    } else {\n                        $('form.registration').trigger('login:register:success', data);\n                        location.href = data.redirectUrl;\n                    }\n                },\n                error: function (err) {\n                    if (err.responseJSON.redirectUrl) {\n                        window.location.href = err.responseJSON.redirectUrl;\n                    } else {\n                        createErrorNotification($('.error-messaging'), err.responseJSON.errorMessage);\n                    }\n\n                    form.spinner().stop();\n                }\n            });\n            return false;\n        });\n    },\n\n    resetPassword: function () {\n        $('.reset-password-form').submit(function (e) {\n            var form = $(this);\n            e.preventDefault();\n            var url = form.attr('action');\n            form.spinner().start();\n            $('.reset-password-form').trigger('login:register', e);\n            $.ajax({\n                url: url,\n                type: 'post',\n                dataType: 'json',\n                data: form.serialize(),\n                success: function (data) {\n                    form.spinner().stop();\n                    if (!data.success) {\n                        formValidation(form, data);\n                    } else {\n                        $('.request-password-title').text(data.receivedMsgHeading);\n                        $('.request-password-body').empty()\n                            .append('<p>' + data.receivedMsgBody + '</p>');\n                        if (!data.mobile) {\n                            $('#submitEmailButton').text(data.buttonText)\n                                .attr('data-dismiss', 'modal');\n                        } else {\n                            $('.send-email-btn').empty()\n                                .html('<a href=\"'\n                                    + data.returnUrl\n                                    + '\" class=\"btn btn-primary btn-block\">'\n                                    + data.buttonText + '</a>');\n                        }\n                    }\n                },\n                error: function () {\n                    form.spinner().stop();\n                }\n            });\n            return false;\n        });\n    },\n\n    clearResetForm: function () {\n        $('#login .modal').on('hidden.bs.modal', function () {\n            $('#reset-password-email').val('');\n            $('.modal-dialog .form-control.is-invalid').removeClass('is-invalid');\n        });\n    }\n};\n\n\n//# sourceURL=webpack://plugin_passwordlesslogin/../storefront-reference-architecture/cartridges/app_storefront_base/cartridge/client/default/js/login/login.js?");

/***/ }),

/***/ "../storefront-reference-architecture/cartridges/app_storefront_base/cartridge/client/default/js/util.js":
/*!***************************************************************************************************************!*\
  !*** ../storefront-reference-architecture/cartridges/app_storefront_base/cartridge/client/default/js/util.js ***!
  \***************************************************************************************************************/
/***/ ((module) => {

eval("\n\nmodule.exports = function (include) {\n    if (typeof include === 'function') {\n        include();\n    } else if (typeof include === 'object') {\n        Object.keys(include).forEach(function (key) {\n            if (typeof include[key] === 'function') {\n                include[key]();\n            }\n        });\n    }\n};\n\n\n//# sourceURL=webpack://plugin_passwordlesslogin/../storefront-reference-architecture/cartridges/app_storefront_base/cartridge/client/default/js/util.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./cartridges/plugin_passwordlesslogin/cartridge/client/default/js/login.js");
/******/ 	
/******/ })()
;